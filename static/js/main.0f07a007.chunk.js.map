{"version":3,"sources":["component/SliderData.js","component/ImageSlider.js","App.js","reportWebVitals.js","index.js"],"names":["Data","DataList","i","push","serialNumber","console","log","SliderData","ImageSlider","slides","useState","current","setCurrent","test","setTest","length","useEffect","className","onClick","style","height","Slider","orientation","max","value","onChange","event","newValue","map","item","index","src","JSON","stringify","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAAMA,G,kBAAO,WAET,IADA,IAAIC,EAAW,GACPC,EAAI,EAAGA,GAAK,GAAIA,IACpBD,EAASE,KACL,CACIC,aAAa,CAACF,OAM1B,OAAOD,IAEXD,IACAK,QAAQC,IAAIN,KAEL,IAAMO,EAAaP,I,gBCmEXQ,EA7EK,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAAY,EACAC,mBAAS,GADT,mBACvBC,EADuB,KACdC,EADc,OAENF,mBAAS,GAFH,mBAEvBG,EAFuB,KAEjBC,EAFiB,KAGxBC,EAASN,EAAOM,OACtBC,qBAAU,eA6BV,OAHAX,QAAQC,IAAIK,GACZN,QAAQC,IAAI,QAAQO,GAGhB,qCACI,sBAAKI,UAAU,SAAf,UACI,cAAC,IAAD,CAAaA,UAAU,aAAaC,QAf9B,WACdN,EAAuB,IAAZD,EAAgBI,EAAS,EAAIJ,EAAU,GAClDG,EAAQD,EAAO,MAcP,cAAC,IAAD,CAAWI,UAAU,cAAcC,QArB7B,WACdN,EAAWD,IAAYI,EAAS,EAAI,EAAIJ,EAAU,GAClDG,EAAQD,EAAO,MAoBP,qBAAKI,UAAU,kBAAkBE,MAAO,CAACC,OAAO,KAAhD,SACA,cAACC,EAAA,EAAD,CACIJ,UAAU,WACVK,YAAY,WACZC,IAAI,KACJC,MAAOX,EACPY,SAlBK,SAACC,EAAOC,GACzBb,EAAQa,QAgCCpB,EAAWqB,KAAI,SAACC,EAAKC,GAClB,OAAO,qBACKC,IAAK,yBAA2BC,KAAKC,UAAUH,GAAS,OACxDI,IAAI,eACJjB,UAAWa,IAAUjB,EAAO,QAAU,cACjCiB,SAGzB,mFACA,qBAAIb,UAAW,QAAf,cAAyBJ,KACzB,qBAAKI,UAAU,QAAQC,QA7DV,WACjBJ,EAAQD,EAAO,EAAI,EAAIA,EAAO,IA4D1B,4CACA,qBAAKI,UAAU,QAAQC,QA1DX,WAChBJ,EAAiB,KAATD,EAAcA,EAAO,EAAI,KAyD7B,gDChDGsB,MArBf,WAAgB,IAAD,EACazB,mBAAS,GADtB,mBAEb,OAFa,UAGX,8BACE,cAAC,EAAD,CAAaD,OAAQF,OCCZ6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0f07a007.chunk.js","sourcesContent":["const Data = () => {\n    let DataList = []\n    for(let i = 0; i <= 66; i++){\n        DataList.push(\n            {\n                serialNumber:{i},\n                // image:'/my-first-web/images/Y'+JSON.stringify(i)+'.jpg'\n                // image:'https://s490607.github.io/my-first-web/images/Y'+JSON.stringify(i)+'.jpg'\n            }\n        )\n    }\n    return DataList;\n}\nData();\nconsole.log(Data());\n\nexport const SliderData = Data();\n\n// export const SliderData = [\n//     {   \n//         serialNumber:'01',\n//         image:'/images/Y01.jpg'\n//     },\n//     {   \n//         serialNumber:'02',\n//         image:'/images/Y02.jpg'\n//     },\n//     {   \n//         serialNumber:'03',\n//         image:'/images/Y03.jpg'\n//     },\n//     {   \n//         serialNumber:'04',\n//         image:'/images/Y04.jpg'\n//     },\n//     {   \n//         serialNumber:'05',\n//         image:'/images/Y05.jpg'\n//     },\n//     {   \n//         serialNumber:'06',\n//         image:'/images/Y06.jpg'\n//     },\n//     {   \n//         serialNumber:'07',\n//         image:'/images/Y07.jpg'\n//     },\n//     {   \n//         serialNumber:'08',\n//         image:'/images/Y08.jpg'\n//     },\n//     {   \n//         serialNumber:'09',\n//         image:'/images/Y09.jpg'\n//     },\n//     {   \n//         serialNumber:'10',\n//         image:'/images/Y10.jpg'\n//     },\n//     {   \n//         serialNumber:'11',\n//         image:'/images/Y11.jpg'\n//     },\n//     {   \n//         serialNumber:'12',\n//         image:'/images/Y12.jpg'\n//     },\n//     {   \n//         serialNumber:'13',\n//         image:'/images/Y13.jpg'\n//     },\n//     {   \n//         serialNumber:'14',\n//         image:'/images/Y14.jpg'\n//     },\n//     {   \n//         serialNumber:'15',\n//         image:'/images/Y15.jpg'\n//     },\n//     {   \n//         serialNumber:'16',\n//         image:'/images/Y16.jpg'\n//     },\n//     {   \n//         serialNumber:'17',\n//         image:'/images/Y17.jpg'\n//     },\n//     {   \n//         serialNumber:'18',\n//         image:'/images/Y18.jpg'\n//     },\n//     {   \n//         serialNumber:'19',\n//         image:'/images/Y19.jpg'\n//     },\n//     {   \n//         serialNumber:'20',\n//         image:'/images/Y20.jpg'\n//     }\n// ]\n\n\n// import React from 'react'\n\n// const SliderData = () => {\n//     let SliderList = [];\n//     for(let i = 1; i <= 10; i++){\n//         // compList.push(<Col className=\"p-0\"  md={6}><div className=\"test-card\">成功</div></Col>)\n//         SliderList.push(\n//             {\n//                 serialNumber:{i},\n//                 images:'/images/Y'+{i}+'01.jpg'\n//             }\n//         )\n//     }\n//     console.log(SliderList);   \n//     return (\n//         SliderList\n//     )\n// }\n\n// const DataList = SliderList;\n\n// export default SliderData;\n// export {DataList} ;\n\n\n\n\n// const SliderList = () => {\n//     let SliderList = [];\n//     for(let i = 1; i <= 10; i++){\n//         // compList.push(<Col className=\"p-0\"  md={6}><div className=\"test-card\">成功</div></Col>)\n//         SliderList.push(\n//             {\n//                 serialNumber:{i},\n//                 images:'/images/Y'+{i}+'01.jpg'\n//             }\n//         )\n//     }\n//     console.log(SliderList);\n//     return(\n//         SliderList\n//     )\n// }\n\n// export default SliderList\n\n\n// export const SliderData = [\n//     {   \n//         serialNumber:'01',\n//         images:'1/images/Y01.jpg'\n//     }\n// ]\n","import React, {useState, useEffect} from 'react'\nimport '../css/ImageSlider.css';\nimport {SliderData} from './SliderData';\nimport {FaArrowUp, FaArrowDown} from 'react-icons/fa';\nimport { Slider } from '@material-ui/core';\n\nconst ImageSlider = ({slides}) => {\n    const [current, setCurrent] = useState(0);\n    const [test, setTest] = useState(1);\n    const length = slides.length\n    useEffect(() => {\n        \n    });\n\n    const resetToFirst = () => {\n        setTest(test > 0 ? 0 : test + 1);\n    };\n\n    const resetToLast = () => {\n        setTest(test === 66 ? test - 1 : 66);\n    };\n\n    const nextSlide = () => {\n        setCurrent(current === length - 1 ? 0 : current + 1);\n        setTest(test + 1)\n    };\n\n    const prevSlide = () => {\n        setCurrent(current === 0 ? length - 1 : current - 1);\n        setTest(test - 1)\n    };\n\n    const handleChange = (event, newValue) => {\n        setTest(newValue)\n    }\n\n    console.log(current);\n    console.log('test:'+test);\n\n    return (\n        <>  \n            <div className=\"slider\">\n                <FaArrowDown className=\"left-arrow\" onClick={prevSlide} />\n                <FaArrowUp className=\"right-arrow\" onClick={nextSlide} />\n                <div className=\"slider-position\" style={{height:500}}>\n                <Slider \n                    className=\"sliderUI\"\n                    orientation=\"vertical\"\n                    max=\"66\"\n                    value={test}\n                    onChange={handleChange}\n                />\n                </div>\n                {/* {SliderData.map((slide, index)=>{\n                    return  (\n                        <div\n                            className={index === current ? 'slide active' : 'slide'}\n                            key={index}\n                        >\n                            {index === current && (\n                            <img src={slide.image} alt='travel image' className='image' />\n                            )}\n                        </div>\n                    );\n                })} */}\n                {SliderData.map((item,index)=>{\n                    return <img \n                                src={\"/my-first-web/images/Y\" + JSON.stringify(index) + \".JPG\"} \n                                alt='travel image' \n                                className={index === test ? 'image' : 'image none'}\n                                key={index} />\n                })}\n            </div>\n            <h1>對比景-視覺比對法</h1>\n            <h1 className= \"title\"> {test}</h1>\n            <div className=\"reset\" onClick={resetToFirst}>重置到最前</div>\n            <div className=\"reset\" onClick={resetToLast}>重置到最後</div>\n            \n        </>\n    )\n}\n\n\nexport default ImageSlider\n","import './App.css';\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Container, Row, Col, Alert, Button} from 'react-bootstrap';\nimport ImageSlider from './component/ImageSlider';\nimport {SliderData} from './component/SliderData';\n\nfunction App() {\n  const [count, setCount] = useState(0);\n  return (\n    <div >\n      <ImageSlider slides={SliderData}/>\n    </div>\n  );\n}\n\n\n\n// import TestCard from './component/TestCard';\n// import TestCardButton from './component/TestCardButton';\n/* <Container>\n        <TestCardButton count={count} setCount={setCount}/>\n        <Row>\n          <TestCard count={count} />\n        </Row>\n        <Alert variant=\"succes\">This is a button</Alert>\n      <h1>Hello</h1>\n</Container> */\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}